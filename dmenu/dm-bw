#!/bin/sh

##===============================================================================
# GLOBAL VARS
##===============================================================================
session_path=/tmp/bw_session
bw_exists=`command -v bw`

##===============================================================================
# FUNCTIONS
##===============================================================================
create_session() {
	[ ! -f "$session_path" ] && bw unlock | grep "export BW_SESSION" | cut -d'"' -f 2 > ${session_path}
}

get_selection() {
	if [ -n "$bw_exists" ]
	then
		# Check if session exists
		if [ ! -f $session_path ]
		then
			## If the session file does not exist, create it
			create_session
		elif [ ! -s $session_path ]
		then
			## If the session file exists, but is empty
			rm ${session_path}
			create_session
		fi

		# Load the session file
		session=`cat $session_path`

		# Parse out the item names
		name_list=$(bw list items --session "${session}" --pretty | grep -w name | cut -c14- | sed 's/"//' | sed 's/,//' )

		# Get selection
		selection=$(echo "$name_list" | dmenu -lp "Select Login: ")

		# Return the selection
		return $selection
	fi
}

##===============================================================================
# SCRIPT
##===============================================================================
for arg in "$@"
do
	case $arg in
		"-h")
			echo "This is the help menu"
			;;
		"-i")
			echo "Email: "
			read email
			echo "Password: "
			read password
			bw login $email $password
			;;
		"-l")
			echo "Locking Bitwarden..."
			rm $session_path
			bw lock
			;;
		"-p")
			bw --session $session get password $selection | xclip -selection clipboard
			;;
		"-r")
			rm $session_path
			;;
		"-u")
			bw --session $session get username $selection | xclip -selection clipboard
			;;
		"-s")
			echo "Input server name: "
			read server
			bw config server $server
			;;
		*)
			echo "Invalid argument"
			;;
	esac
done

